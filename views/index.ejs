<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Contentbot</title>
		<link href="assets/css/style.css" rel="stylesheet">
		<meta name="apple-mobile-web-app-capable" content="yes" />
		<meta name="mobile-web-app-capable" content="yes" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
	</head>

	<body>
		<script src="/assets/libs/jquery.min.js"></script>
		<script src="/assets/libs/three.min.js"></script>
    <script src="/assets/js/SeamlessLoop.js"></script>
    <script src="/assets/js/OrbitControls.js"></script>
		<script src="/assets/js/socket.io.js"></script>
    <script src="/assets/js/autolink-min.js"></script>

    <script src="/assets/libs/twemoji-1.2.1/twemoji.min.js"></script>
    <div id='loading'><img src='/assets/img/loading.gif' /></div>
		<div id="canvas-3d" class="viewer"></div>
    <!-- <div id='live'><blink>LIVE</blink></div> !-->
		<div id='feed'>
      <div id='currentinfo'>
        <h4>Browsing:</h4> <span id='currentsite'><%= current_site.title %> </span>
        <div id='currenturl'></div>
      </div>
      <div id='tweets-container'>
        <h4>Latest Tweets:</h4>
        <ul id='tweets'>
          <script>
          $('#currenturl').html('<%= current_site.url %>'.autoLink({ target: "_blank", rel: "nofollow"}))
          <% var length =  recent_tweets.length %>
          <% for(var i=0;i < length;i++){ %>
            var tbody = "<%= recent_tweets[i].text %>".autoLink({ target: "_blank", rel: "nofollow"});
            $('#tweets').append('<li class="tweet"><a href="https://twitter.com/contentbot2k15"><img class="twitter-avatar" src="/assets/img/avatar.png"></img><p class="twitter-meta"><strong>contentbot</strong><br>@contentbot2k15</p></a><p class="tweet-body">' + twemoji.parse(tbody, { size:16 }) + '</p><p class="tweet-date"><%= recent_tweets[i].created_at %></p></li>');
          <% } %>
          </script>
        <ul>
      </div>
      <div id='feed-footer'><a href='https://twitter.com/contentbot2k15' target="_blank">View all</a></div>
    </div>
    
		<div id='i'>
			<a href='#' id='ilink'>i</a>
		</div>
		<div id='info'>
				<a href='#' id='infoclose'>x</a>
				<p id='about'>Contentbot is a relentless virtual participant in the attention economy, 📡 the web for 🔥 new content on a 24/7 basis. Meaningful tweets are constructed via rudimentary sentiment analysis. ???</p>

        <p>By <a href='http://www.alexandertaylor.org/'>AT</a></p>

        <p>Tool credits:</p>
        <ul>
          <li>Node, Express, Socket.io</li>
          <li>Three.js</li>
          <li>Phantomjs</li>
          <li><a href='https://github.com/brenden/node-webshot'>Webshot</a></li>
          <li><a href='https://github.com/tmpvar/jsdom'>jsdom</a></li>
          <li><a href='https://github.com/twitter/twemoji'>Twemoji</a></li>
          <li><a href='https://github.com/Hivenfour/SeamlessLoop'>SeamlessLoop</a></li>
          <li><a href='https://github.com/bryanwoods/autolink-js'>autolink-js</a></li>
          <li>jQuery</li>
        </ul>

		</div>
    <div id='camera-select'>
      Angle: <span id='angle-one'>1</span> <span id='angle-two'>2</span>
    </div>
    <div id='start-audio'>Enable audio</div>
     <audio id='mouseclick'>
      <source src='/assets/audio/mouseclick.mp3' type='audio/mpeg'>
    </audio>



		<script>
    var scene, camera, renderer;
    var clock = new THREE.Clock();
    init();

    function init() {
      scene = new THREE.Scene();
      var WIDTH = window.innerWidth,
          HEIGHT = window.innerHeight;
      renderer = new THREE.WebGLRenderer({antialias:true});
      

      renderer.setSize(WIDTH, HEIGHT);

      document.body.appendChild(renderer.domElement);
      VIEW_ANGLE = 15,
      ASPECT = WIDTH / HEIGHT,
      NEAR = 1,
      FAR = 10000;
      camera = new THREE.PerspectiveCamera(VIEW_ANGLE, ASPECT, NEAR, FAR);
      camera.position.set(500, 120, 0);
      camera.lookAt({x:0,y:0,z:-50});
      scene.add(camera);
      window.addEventListener('resize', function() {
        var WIDTH = window.innerWidth,
            HEIGHT = window.innerHeight;
        renderer.setSize(WIDTH, HEIGHT);
        camera.aspect = WIDTH / HEIGHT;
        camera.updateProjectionMatrix();
      });
      renderer.shadowMapEnabled = true;
      renderer.shadowMapSoft = true;
      renderer.shadowMapType = THREE.PCFShadowMap;
      // move camera stuff (need both)
        //controls = new THREE.OrbitControls( camera );
        //controls.addEventListener( 'change', render );
  };

    var spotLight = new THREE.SpotLight( 0xffffff, 1 );
    spotLight.position.set(-25, 45, -18 );
     spotLight.target.position.set( 5, 15, -15 );
      spotLight.castShadow = true;
      spotLight.shadowDarkness = 0.5;
     spotLight.shadowMapWidth = 1024;
      spotLight.shadowMapHeight = 1024;
      //spotLight.shadowCameraVisible = true;
     spotLight.shadowCameraNear = 20; 
      spotLight.shadowCameraFov = 30; 

    scene.add( spotLight );

    var light = new THREE.SpotLight( 0x44C0FC, 0.15 );
     light.position.set( -26, 22, 5.35 );
      scene.add( light );

var light2 = new THREE.PointLight( 0xDD0048 , 0.06 );
light2.position.set( -40, 0, 30 );
scene.add( light2 );


var lightflash = function(){
  scene.remove( light2 );
  setTimeout(function (){
    scene.add( light2 );
  }, 1000);
}


setInterval(function(){ 
  lightflash();
}, 2000);

var loader = new THREE.JSONLoader(); // init the loader util

// init loading
loader.load('assets/models/animated.json', function (geometry, materials) {
    materials[135].skinning = true;
  // create a new material
  var material = new THREE.MeshFaceMaterial(materials);
  // create a mesh with models geometry and material
  var mesh = new THREE.SkinnedMesh(geometry,material);

  // mesh.material.materials[10] = screen
 mesh.material.materials[10].map = THREE.ImageUtils.loadTexture( '/assets/models/screen.jpg' );
 mesh.material.materials[10].needsUpdate = true;

  //mesh.castShadow = true;
  mesh.receiveShadow = true;
 
  scene.add(mesh);
  THREE.AnimationHandler.add( mesh.geometry.animations[0] );
  //'rigAction'
  var animation = new THREE.Animation(mesh, geometry.animations[0].name)
  animation.timeScale = 0.03;
  animation.play();
  makeScreenlive(mesh);
  animate();
});


function makeScreenlive(mesh){
  var socket = io();
  socket.on('new site', function(msg){
    $('#mouseclick').trigger('play');
    mesh.material.materials[10].needsUpdate = true;
    mesh.material.materials[10].map = THREE.ImageUtils.loadTexture( './assets/models/screen.jpg?' + escape(new Date()) );
    mesh.material.materials[10].needsUpdate = true;
    $('#currentsite').html(msg.pagetitle);
    $('#currenturl').html(msg.pageurl.autoLink({ target: "_blank", rel: "nofollow" }));
  });

  socket.on('new tweet', function(msg){
    $('#tweets').prepend('<li class="tweet"><a href="https://twitter.com/contentbot2k15"><img class="twitter-avatar" src="/assets/img/avatar.png"></img><p class="twitter-meta"><strong>contentbot</strong><br>@contentbot2k15</p></a><p class="tweet-body">' +twemoji.parse( msg.text.autoLink({ target: "_blank", rel: "nofollow"}) , { size:16 }) + '</p><p class="tweet-date">'+ msg.created_at +'</p></li>');



  });
}

function animate(mesh) {

        requestAnimationFrame( animate );

        render();


      }


  function render() {
    var delta = 0.75 * clock.getDelta();
    THREE.AnimationHandler.update( delta );
  renderer.render( scene, camera );
}

$('#start-audio').click(function(){
  $(this).fadeOut();
})

  </script>

  <script>

var loop = new SeamlessLoop();
loop.addUri('/assets/audio/ambientnoise.mp3', 8110, "ambientnoise");
loop.callback(soundsLoaded);
function soundsLoaded() {
  loop.start("ambientnoise");
};

</script>




  <script type="text/javascript" src="/assets/js/main.js"></script>
	</body>
</html>